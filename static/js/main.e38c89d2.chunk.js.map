{"version":3,"sources":["images/card-bg@1x.png","images/card-bg@1x.webp","images/card-bg@2x.png","images/card-bg@2x.webp","components/Card.js","components/Buy.js","components/Pack.js","components/Catalog.js","components/Shop.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","props","label","question","title","available","filling","portionAmount","portion","mouseAmount","mouse","customer","quantity","units","isSelected","isFocused","packHandler","focusHandler","react_default","a","createElement","className","tabIndex","onMouseEnter","onMouseLeave","onFocus","onBlur","onClick","onKeyPress","type","srcSet","concat","smallCatW","bigCatW","src","smallCat","bigCat","width","height","alt","Buy","add","link","description","unavailable","href","Pack","state","e","_this","preventDefault","key","setState","_this$state","card","currentTarget","weight","querySelector","classList","remove","_this$props","this","_this$state2","components_Card","components_Buy","Component","Catalog","productsList","productsData","map","product","components_Pack","id","Shop","components_Catalog","Main","header","components_Shop","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","remoteData","process","fetch","then","response","json","data","catch","alert","components_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","components_App","document","getElementById","URL","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e38c89d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-bg@1x.68894ae3.png\";","module.exports = __webpack_public_path__ + \"static/media/card-bg@1x.30d9c363.webp\";","module.exports = __webpack_public_path__ + \"static/media/card-bg@2x.1bc3d597.png\";","module.exports = __webpack_public_path__ + \"static/media/card-bg@2x.a97d683e.webp\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport smallCat from 'images/card-bg@1x.png';\r\nimport smallCatW from 'images/card-bg@1x.webp';\r\nimport bigCat from 'images/card-bg@2x.png';\r\nimport bigCatW from 'images/card-bg@2x.webp';\r\nimport 'index.scss';\r\n\r\nconst Card = (props) => {\r\n  const {label, question, title, available, filling, portionAmount, portion, mouseAmount, mouse, customer, quantity, units, isSelected, isFocused, packHandler, focusHandler} = props;\r\n\r\n  return (\r\n    <div \r\n      className={available && !isSelected\r\n        ? \"card pack__wrapper\"\r\n        : available && isSelected\r\n        ? \"card card--selected pack__wrapper\"\r\n        : \"card card--disabled pack__wrapper\"}\r\n      tabIndex=\"0\"\r\n      onMouseEnter={available ? focusHandler : null}\r\n      onMouseLeave={available ? focusHandler : null}\r\n      onFocus={available ? focusHandler : null}\r\n      onBlur={available ? focusHandler : null}\r\n      onClick={available ? packHandler : null}\r\n      onKeyPress={available ? packHandler  : null}>\r\n      \r\n      {isSelected && isFocused\r\n        ? null \r\n        : <p className=\"card__lead\">{label}</p>}\r\n      \r\n      {isSelected && isFocused &&\r\n        <p className=\"card__lead card__lead--pink\">{question}</p>}\r\n      \r\n      <h3 className={available\r\n        ? \"title card__title\"\r\n        : \"title card__title card__title--disabled\"}>{title}\r\n      </h3>\r\n      \r\n      <p className={available\r\n        ? \"card__filling\"\r\n        : \"card__filling card__filling--disabled\"}>{filling}\r\n      </p>\r\n      \r\n      <p className=\"card__set\">\r\n        <b>{portionAmount}</b>{portion}<br/><b>{mouseAmount}</b>{mouse}<br/>{customer}\r\n      </p>\r\n      \r\n      <div \r\n        className={available  && !isSelected\r\n          ? \"card__weight\"\r\n          : available && isSelected\r\n          ? \"card__weight card__weight--selected\"\r\n          : \"card__weight card__weight--disabled\"}>\r\n        \r\n        <p className=\"card__quantity\">{quantity}</p>\r\n        <p className=\"card__units\">{units}</p>\r\n      </div>\r\n      \r\n      <picture className=\"card__picture\">\r\n        <source \r\n          className=\"card__source\" \r\n          type=\"image/webp\" \r\n          srcSet={`${smallCatW} 1x, ${bigCatW} 2x`}>\r\n        </source>\r\n        <img \r\n          className={available\r\n            ? \"card__image\"\r\n            : \"card__image card__image--disabled\"}\r\n          src={`${smallCat} 1x`}\r\n          srcSet={`${bigCat} 2x`}\r\n          width=\"298\"\r\n          height=\"267\"\r\n          alt=\"Довольный кот\">\r\n        </img>\r\n      </picture>\r\n    </div>\r\n  )\r\n};\r\n\r\nCard.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  filling: PropTypes.string.isRequired,\r\n  portionAmount: PropTypes.string,\r\n  portion: PropTypes.string.isRequired,\r\n  mouseAmount: PropTypes.string,\r\n  mouse: PropTypes.string,\r\n  customer: PropTypes.string,\r\n  quantity: PropTypes.string.isRequired,\r\n  units: PropTypes.string.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n  isFocused: PropTypes.bool.isRequired,\r\n  packHandler: PropTypes.func.isRequired,\r\n  focusHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'index.scss';\r\n\r\nconst Buy = (props) => {\r\n  const {available, add, link, description, unavailable, isSelected, packHandler} = props;\r\n\r\n  return (\r\n    <div \r\n      className=\"buy pack__wrapper\">\r\n      {available && !isSelected &&\r\n        <p className=\"buy__add\">{add}\r\n          <a \r\n            className=\"buy__link\"\r\n            href=\"./index.html\" \r\n            onClick={packHandler} \r\n            onKeyPress={packHandler}>{link}\r\n          </a>\r\n        </p>}\r\n      \r\n      {available && isSelected && \r\n        <p className=\"buy__description\">{description}</p>}\r\n      \r\n      {!available &&\r\n        <p className=\"buy__unavailable\">{unavailable}</p>}\r\n    </div>\r\n  )\r\n};\r\n\r\nBuy.propTypes = {\r\n  add: PropTypes.string.isRequired,\r\n  link: PropTypes.string.isRequired, \r\n  available: PropTypes.bool.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  unavailable: PropTypes.string.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n  packHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Buy;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card';\r\nimport Buy from './Buy';\r\nimport 'index.scss';\r\n\r\n class Pack extends Component {\r\n  state = {\r\n    isSelected: false,\r\n    isFocused: false\r\n  };\r\n  \r\n  //Mouse click or press enter to add chosen pack to basket\r\n  packHandler = (e) => {\r\n    const {isSelected} = this.state;\r\n\r\n    e.preventDefault();\r\n    if(e.type === 'click' || (e.type === 'keypress' && e.key === 'Enter')) {\r\n      this.setState ({\r\n        isSelected: !isSelected,\r\n        isFocused: false\r\n      });\r\n    }\r\n  };\r\n  \r\n  //Make card border lighter after hover/focus\r\n  focusHandler = (e) => {\r\n    const {isFocused, isSelected} = this.state;\r\n    let card = e.currentTarget;\r\n    let weight = card.querySelector(\".card__weight\");\r\n    \r\n    if (e.type === \"mouseenter\" || e.type === \"focus\") {\r\n      if (isSelected) {\r\n        card.classList.add(\"card--selected--focused\");\r\n        weight.classList.add(\"card__weight--selected--focused\");\r\n      } else if (!isFocused) {\r\n        card.classList.add(\"card--focused\");\r\n        weight.classList.add(\"card__weight--focused\");\r\n      }\r\n      this.setState ({\r\n        isFocused: true\r\n      });\r\n    }\r\n    \r\n    if (e.type === \"mouseleave\" || e.type === \"blur\") {\r\n      if (isSelected) {\r\n        card.classList.remove(\"card--selected--focused\");\r\n        weight.classList.remove(\"card__weight--selected--focused\");\r\n      } else if (isFocused) {\r\n        card.classList.remove(\"card--focused\");\r\n        weight.classList.remove(\"card__weight--focused\");\r\n      }\r\n      this.setState ({\r\n        isFocused: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {available, filling, portionAmount, portion, mouseAmount, mouse, customer, quantity, units, description, unavailable} = this.props;\r\n    const {isSelected, isFocused} = this.state;\r\n\r\n    return (\r\n      <li className=\"pack catalog__item\">\r\n        <Card\r\n          label=\"Сказочное заморское яство\"\r\n          question=\"Котэ не одобряет?\"\r\n          title=\"Нямушка\"\r\n          available={available}\r\n          filling={filling}\r\n          portionAmount={portionAmount}\r\n          portion={portion}\r\n          mouseAmount={mouseAmount}\r\n          mouse={mouse}\r\n          customer={customer}\r\n          quantity={quantity}\r\n          units={units}\r\n          isSelected={isSelected}\r\n          isFocused={isFocused}\r\n          packHandler={this.packHandler}\r\n          focusHandler={this.focusHandler}\r\n        />\r\n        <Buy\r\n          available={available}\r\n          add=\"Чего сидишь? Порадуй котэ, \"\r\n          link=\"купи\"\r\n          description={description}\r\n          unavailable={unavailable}\r\n          isSelected={isSelected}\r\n          packHandler={this.packHandler}\r\n        />\r\n      </li>\r\n    )\r\n  }\r\n};\r\n\r\nPack.propTypes = {\r\n  available: PropTypes.bool.isRequired,\r\n  filling: PropTypes.string.isRequired,\r\n  portionAmount: PropTypes.string,\r\n  portion: PropTypes.string.isRequired,\r\n  mouseAmount: PropTypes.string,\r\n  mouse: PropTypes.string,\r\n  customer: PropTypes.string,\r\n  quantity: PropTypes.string.isRequired,\r\n  units: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  unavailable: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Pack;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Pack from './Pack';\r\nimport 'index.scss';\r\n\r\nconst Catalog = (props) => {\r\n  const {productsData} = props;\r\n  const productsList = productsData.map(function(product) {\r\n    return(\r\n      <Pack\r\n        key={product.id}\r\n        available={product.available}\r\n        filling={product.filling}\r\n        portionAmount={product.portionAmount}\r\n        portion={product.portion}\r\n        mouseAmount={product.mouseAmount}\r\n        mouse={product.mouse}\r\n        customer={product.customer}\r\n        quantity={product.quantity}\r\n        units={product.units}\r\n        description={product.description}\r\n        unavailable={product.unavailable}\r\n      />\r\n    )\r\n  });\r\n\r\n  return (\r\n    <ul className=\"catalog shop__list\">\r\n      {productsList}\r\n    </ul>\r\n  )\r\n};\r\n\r\nCatalog.propTypes = {\r\n  productsData: PropTypes.arrayOf(PropTypes.shape ({\r\n    id: PropTypes.number.isRequired,\r\n    available: PropTypes.bool.isRequired,\r\n    filling: PropTypes.string.isRequired,\r\n    portionAmount: PropTypes.string,\r\n    portion: PropTypes.string.isRequired,\r\n    mouseAmount: PropTypes.string,\r\n    mouse: PropTypes.string,\r\n    customer: PropTypes.string,\r\n    quantity: PropTypes.string.isRequired,\r\n    units: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    unavailable: PropTypes.string.isRequired\r\n  }))\r\n};\r\n\r\nexport default Catalog;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Catalog from './Catalog';\r\nimport 'index.scss';\r\n\r\nconst Shop = (props) => {\r\n  const {title, productsData} = props;\r\n\r\n  return (\r\n    <section className=\"shop main__section\">\r\n      <h2 className=\"title shop__title\">\r\n        {title}\r\n      </h2>\r\n      <Catalog\r\n        productsData={productsData}\r\n      />\r\n    </section>\r\n  )\r\n};\r\n\r\nShop.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  productsData: PropTypes.arrayOf(PropTypes.shape ({\r\n    id: PropTypes.number.isRequired,\r\n    available: PropTypes.bool.isRequired,\r\n    filling: PropTypes.string.isRequired,\r\n    portionAmount: PropTypes.string,\r\n    portion: PropTypes.string.isRequired,\r\n    mouseAmount: PropTypes.string,\r\n    mouse: PropTypes.string,\r\n    customer: PropTypes.string,\r\n    quantity: PropTypes.string.isRequired,\r\n    units: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    unavailable: PropTypes.string.isRequired\r\n  }))\r\n};\r\n\r\nexport default Shop;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Shop from './Shop';\nimport 'index.scss';\n\nconst Main = (props) => {\n  const {header, productsData} = props;\n\n  return (\n    <main className=\"main page__main\">\n      <h1 className=\"title main__title screen-readers-only\">{header}</h1>\n      <Shop\n        title=\"Ты сегодня покормил кота?\"\n        productsData={productsData}\n      />\n    </main>\n  )\n};\n\nMain.propTypes = {\n  header: PropTypes.string.isRequired,\n  productsData: PropTypes.arrayOf(PropTypes.shape ({\n    id: PropTypes.number.isRequired,\n    available: PropTypes.bool.isRequired,\n    filling: PropTypes.string.isRequired,\n    portionAmount: PropTypes.string,\n    portion: PropTypes.string.isRequired,\n    mouseAmount: PropTypes.string,\n    mouse: PropTypes.string,\n    customer: PropTypes.string,\n    quantity: PropTypes.string.isRequired,\n    units: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    unavailable: PropTypes.string.isRequired\n  }))\n};\n\nexport default Main;\n","import React, {Component} from 'react';\r\nimport Main from './Main';\r\nimport 'index.scss';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      productsData: []\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    const remoteData = `${process.env.PUBLIC_URL}/data/productsData.json`;\r\n    \r\n    fetch(remoteData)\r\n    .then((response) => response.json())\r\n    .then(data => this.setState({productsData: data}))\r\n    .catch(alert)\r\n  };\r\n\r\n  render () {\r\n    const {productsData} = this.state;\r\n\r\n    return (\r\n      <Main\r\n        header=\"Кошачий корм Нямушка\"\r\n        productsData={productsData}\r\n      />\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}